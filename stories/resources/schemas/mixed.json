{
  "type": "object",
  "id": "story",
  "properties": {
    "body": {
      "title": "XML content",
      "description": "The body content to attach to the request or to the response. You can also make use of freemarker templating engine to map an incoming body content to a new one.",
      "type": "string",
      "x-schema-form": {
        "type": "codemirror",
        "codemirrorOptions": {
          "placeholder": "Put the body content here",
          "lineWrapping": true,
          "lineNumbers": true,
          "allowDropFileTypes": true,
          "autoCloseTags": true,
          "mode": "xml"
        },
        "placeholder": "<xml></xml>"
      }
    },
    "el": {
      "title": "EL input",
      "type": "string",
      "description": "Add an Expression Language",
      "x-schema-form": {
        "expression-language": true,
        "placeholder": "{#request.headers['content-type'][0] == 'application/json'}"
      }
    },
    "body-with-el": {
      "title": "XML Content (accept EL)",
      "type": "string",
      "x-schema-form": {
        "expression-language": true,
        "type": "codemirror",
        "codemirrorOptions": {
          "lineWrapping": true,
          "lineNumbers": true,
          "allowDropFileTypes": true,
          "autoCloseTags": true,
          "mode": "xml"
        }
      }
    },
    "path-operator": {
      "type": "object",
      "properties": {
        "operator": {
          "title": "Operator path",
          "description": "The operator path",
          "type": "string",
          "enum": ["EQUALS", "STARTS_WITH"],
          "default": "STARTS_WITH",
          "x-schema-form": {
            "titleMap": {
              "EQUALS": "Equals",
              "STARTS_WITH": "Starts with"
            }
          }
        },
        "path": {
          "title": "Path",
          "description": "The path of flow (must start by /)",
          "type": "string",
          "pattern": "^/",
          "x-schema-form": {
            "placeholder": "/my-path"
          }
        }
      },
      "required": ["path", "operator"]
    },
    "resources": {
      "title": "Async list of resource",
      "description": "Special field that's dispatch an event after add in DOM, usefull for async load",
      "type": "string",
      "x-schema-form": {
        "event": {
          "name": "fetch-data"
        }
      }
    },
    "another-list-resources": {
      "title": "Async list of resource",
      "description": "Special field that's dispatch an event after add in DOM, usefull for async load",
      "type": "string",
      "x-schema-form": {
        "event": {
          "name": "fetch-data"
        }
      }
    },
    "attributes": {
      "type": "array",
      "title": "Assign context attributes",
      "items": {
        "type": "object",
        "id": "attr",
        "title": "Attribute",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the attribute",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "description": "Value of the attribute (support EL)",
            "type": "string"
          }
        },
        "required": ["name", "value"],
        "x-schema-form": {
          "open": false
        }
      }
    },
    "timeToLiveSeconds": {
      "title": "Time to live (in seconds)",
      "default": 600,
      "description": "Time to live of the element put in cache (Default to 10 minutes).",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000
    },
    "useResponseCacheHeaders": {
      "title": "Use response headers",
      "description": "Time to live based on 'Cache-Control' and / or 'Expires' headers from response.",
      "type": "boolean"
    },
    "select": {
      "title": "Simple select",
      "type": "string",
      "enum": ["a", "b", "c"]
    },
    "multiselect": {
      "title": "Multi select",
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["a", "b", "c"]
      }
    },
    "cron": {
      "title": "Cron expression",
      "type": "string",
      "x-schema-form": {
        "cron-expression": true
      }
    },
    "disabled": {
      "title": "Disabled field if 'Simple select' is 'a'",
      "type": "string",
      "x-schema-form": {
        "disabled": [{ "$def": "select" }, { "$eq": { "select": "a" } }]
      }
    },
    "hidden-with-condition": {
      "title": "Hidden field if 'Simple select' is 'a'",
      "type": "string",
      "x-schema-form": {
        "hidden": [
          {
            "$def": "select"
          },
          {
            "$eq": {
              "select": "a"
            }
          }
        ]
      }
    },
    "hidden": {
      "title": "Hidden field",
      "type": "string",
      "x-schema-form": {
        "hidden": true
      }
    },
    "readonly": {
      "title": "Readonly field",
      "default": "Should not edit my value",
      "description": "Example for readonly",
      "type": "string",
      "readOnly": true
    },
    "writeonly": {
      "title": "Write only field",
      "default": "Should not read my value",
      "description": "Example for writeonly",
      "type": "string",
      "writeOnly": true
    },
    "whitelist": {
      "title": "Whitelist",
      "type": "array",
      "items": {
        "title": "Rule",
        "type": "object",
        "id": "urn:jsonschema:io:gravitee:policy:resourcefiltering:configuration:Resource",
        "properties": {
          "pattern": {
            "type": "string",
            "title": "Path pattern",
            "description": "Ant-style path patterns"
          },
          "methods": {
            "title": "Methods",
            "description": "HTTP Methods",
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]
            }
          }
        },
        "required": ["pattern"]
      }
    }
  },
  "required": ["multiselect", "timeToLiveSeconds"],
  "additionalProperties": false,
  "patternProperties": {
    "property-to-keep": true
  }
}
