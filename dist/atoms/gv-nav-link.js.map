{"version":3,"sources":["node_modules/@gravitee/components/atoms/gv-nav-link.js"],"names":["LitElement","html","css","link","dispatchCustomEvent","GvNavLink","properties","route","type","Object","_currentRoute","Array","attribute","styles","constructor","super","this","Promise","resolve","then","value","catch","e","console","trace","_onClick","preventDefault","render","isActive","path","title","window","customElements","define"],"mappings":"qBAASA,UAAYC,SAAMC,MAAW,6BAC7BC,MAAY,0CACZC,MAA2B,uBAa7B,MAAMC,kBAAkBL,EAE7BM,wBACE,MAAO,CACLC,MAAO,CAAEC,KAAMC,QACfC,EAAe,CAAEF,KAAMG,MAAOC,WAAW,IAI7CC,oBACE,MAAO,CACLV,EAEAD,CAAG,oLAkBPY,cACEC,QACAC,KAAKN,EAAgB,GAGvBH,UAAWA,GACLA,GACFU,QAAQC,QAAQX,GACbY,KAAMC,IACLJ,KAAKN,EAAgBU,IAEtBC,MAAOC,IACNC,QAAQC,MAAM,mBAAoBF,KAK1Cf,YACE,OAAOS,KAAKT,MAGdkB,EAAUH,GACRA,EAAEI,iBACFtB,EAAoBY,KAAM,QAASA,KAAKN,GAG1CiB,SACE,OAAO1B,CAAI,cACGe,KAAKS,aACRT,KAAKN,EAAckB,SAAW,UAAY,iBAC3CZ,KAAKN,EAAcmB,gBAClBb,KAAKN,EAAcoB,UAChCd,KAAKN,EAAcoB,aAOrBC,OAAOC,eAAeC,OAAO,cAAe5B","sourcesContent":["import { LitElement, html, css } from 'lit-element';\nimport { link } from '../styles';\nimport { dispatchCustomEvent } from '../lib/events';\n\n/**\n * A nav link\n *\n * @fires gv-nav-link:click - Custom click event from inner link element\n *\n * @slot - The content of the link (text or HTML)\n *\n * @attr {Object} route - Simple object with {title: String, path: String, isActive: Boolean}\n *\n * @cssprop {String} --gv-nav-link-active - set the color of selected link.\n */\nexport class GvNavLink extends LitElement {\n\n  static get properties () {\n    return {\n      route: { type: Object },\n      _currentRoute: { type: Array, attribute: false },\n    };\n  }\n\n  static get styles () {\n    return [\n      link,\n      // language=css\n      css`\n          a {\n              opacity: 1;\n              padding: 1rem 2rem;\n              color: #333333;\n              display: inline-block;\n              background-color: transparent;\n              text-align: center;\n          }\n\n          .active {\n              color: #fff;\n              background-color: var(--gv-nav-link-active, #333)\n          }\n      `,\n    ];\n  }\n\n  constructor () {\n    super();\n    this._currentRoute = {};\n  }\n\n  set route (route) {\n    if (route) {\n      Promise.resolve(route)\n        .then((value) => {\n          this._currentRoute = value;\n        })\n        .catch((e) => {\n          console.trace('Cannot get route', e);\n        });\n    }\n  }\n\n  get route () {\n    return this.route;\n  }\n\n  _onClick (e) {\n    e.preventDefault();\n    dispatchCustomEvent(this, 'click', this._currentRoute);\n  }\n\n  render () {\n    return html`\n      <a @click=${this._onClick} \n      class=\"${this._currentRoute.isActive ? 'active ' : ''}link\" \n      href=\"${this._currentRoute.path}\" \n      title=\"${this._currentRoute.title}\">\n${this._currentRoute.title}\n      </a>\n    `;\n  }\n\n}\n\nwindow.customElements.define('gv-nav-link', GvNavLink);\n"]}