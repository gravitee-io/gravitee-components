{"version":3,"sources":["node_modules/@gravitee/components/atoms/gv-nav-link.js"],"names":["classMap","LitElement","html","css","link","dispatchCustomEvent","GvNavLink","properties","href","type","String","title","selected","Boolean","styles","_onClick","e","preventDefault","this","render","modes","window","customElements","define"],"mappings":"mBAASA,MAAgB,wDAChBC,UAAYC,SAAMC,MAAW,6BAC7BC,MAAY,0CACZC,MAA2B,uBAe7B,MAAMC,kBAAkBL,EAE7BM,wBACE,MAAO,CACLC,KAAM,CAAEC,KAAMC,QACdC,MAAO,CAAEF,KAAMC,QACfE,SAAU,CAAEH,KAAMI,UAItBC,oBACE,MAAO,CACLV,EAEAD,CAAG,wLAkBPY,EAAUC,GACRA,EAAEC,iBACFZ,EAAoBa,KAAM,QAAS,CAAEV,KAAMU,KAAKV,KAAMG,MAAOO,KAAKP,QAGpEQ,SACE,MAAMC,EAAQ,CACZR,SAAUM,KAAKN,SACfR,MAAM,GAGR,OAAOF,CAAI,cACGgB,KAAKH,mBAAyBf,EAASoB,aAAiBF,KAAKV,gBAAgBU,KAAKP,4BAQpGU,OAAOC,eAAeC,OAAO,cAAejB","sourcesContent":["import { classMap } from 'lit-html/directives/class-map.js';\nimport { LitElement, html, css } from 'lit-element';\nimport { link } from '../styles';\nimport { dispatchCustomEvent } from '../lib/events';\n\n/**\n * A nav link\n *\n * @fires gv-nav-link:click - Custom click event from inner link element\n *\n * @slot - The content of the link (text or HTML)\n *\n * @attr {String} href - set href of link\n * @attr {String} title - set title of link\n * @attr {Boolean} selected - set link as selected\n *\n * @cssprop {String} --gv-nav-link-selected - set the color of selected link.\n */\nexport class GvNavLink extends LitElement {\n\n  static get properties () {\n    return {\n      href: { type: String },\n      title: { type: String },\n      selected: { type: Boolean },\n    };\n  }\n\n  static get styles () {\n    return [\n      link,\n      // language=css\n      css`\n          a {\n              opacity: 1;\n              padding: 1rem 2rem;\n              color: #333333;\n              display: inline-block;\n              background-color: transparent;\n              text-align: center;\n          }\n\n          .selected {\n              color: #fff;\n              background-color: var(--gv-nav-link-selected, #333)\n          }\n      `,\n    ];\n  }\n\n  _onClick (e) {\n    e.preventDefault();\n    dispatchCustomEvent(this, 'click', { href: this.href, title: this.title });\n  }\n\n  render () {\n    const modes = {\n      selected: this.selected,\n      link: true,\n    };\n\n    return html`\n      <a @click=${this._onClick} class=\"class=${classMap(modes)}\" href=\"${this.href}\" title=\"${this.title}\">\n        <slot></slot>\n      </a>\n    `;\n  }\n\n}\n\nwindow.customElements.define('gv-nav-link', GvNavLink);\n"]}