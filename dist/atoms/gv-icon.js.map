{"version":3,"sources":["node_modules/@gravitee/components/atoms/gv-icon.js"],"names":["css","LitElement","TemplateResult","getCssVar","GvIcons","GvIcon","properties","shape","type","String","size","Number","styles","constructor","super","this","render","icon","getIcon","color","replace","window","customElements","define"],"mappings":"cAASA,gBAAKC,MAAkB,uCACvBC,MAAsB,+BACtBC,MAAiB,iCACjBC,MAAe,2BAkBjB,MAAMC,eAAeJ,EAE1BK,wBACE,MAAO,CACLC,MAAO,CAAEC,KAAMC,QACfC,KAAM,CAAEF,KAAMG,SAIlBC,oBACE,MAAO,CAELZ,CAAG,qFAUPa,cACEC,QACAC,KAAKL,KAAO,GAGdM,SACE,IAAIC,EAAOb,EAAQc,QAAQH,KAAKR,OAChC,MAAMY,EAAQhB,EAAUY,KAAM,WAI9B,OAHII,IACFF,EAAOA,EAAKG,QAAQ,eAAiB,SAAQD,OAExC,IAAIjB,EAAe,CACvB,eAAca,KAAKL,iBAAiBK,KAAKL,6BAA8BO,EAAM,UAAW,GAAI,SAKnGI,OAAOC,eAAeC,OAAO,UAAWlB","sourcesContent":["import { css, LitElement } from 'lit-element';\nimport { TemplateResult } from 'lit-html';\nimport { getCssVar } from '../lib/style';\nimport { GvIcons } from '../icons/gv-icons';\n\n/**\n * An icon\n *\n * ## Details\n *\n * *  You can import all shapes or only shapes by category\n *\n * @example\n * import './shapes/all-shapes'\n * import './shapes/shopping-shapes'\n *\n * @attr {String} shape - name of shape like\n * @attr {Number} size - size in pixel use for width and height\n * @cssprop {String} --gv-icon - set the color of icon\n */\n\nexport class GvIcon extends LitElement {\n\n  static get properties () {\n    return {\n      shape: { type: String },\n      size: { type: Number },\n    };\n  }\n\n  static get styles () {\n    return [\n      // language=CSS\n      css`\n          :host {\n              box-sizing: border-box;\n              display: inline-block;\n              margin: 0.2rem;\n              vertical-align: top;\n          }\n      `];\n  }\n\n  constructor () {\n    super();\n    this.size = 24;\n  }\n\n  render () {\n    let icon = GvIcons.getIcon(this.shape);\n    const color = getCssVar(this, 'gv-icon');\n    if (color) {\n      icon = icon.replace(/fill=\"#000\"/g, `fill=\"${color}\"`);\n    }\n    return new TemplateResult([\n      `<svg width=\"${this.size}\" height=\"${this.size}\" viewBox=\"0 0 48 48\">`, icon, '</svg>'], [], 'html');\n  }\n\n}\n\nwindow.customElements.define('gv-icon', GvIcon);\n"]}