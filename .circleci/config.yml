version: 2.1

orbs:
  secrethub: secrethub/cli@1.1

executors:
  node-lts:
    parameters:
      class:
        description: The resource class
        type: enum
        enum: [ 'small', 'medium', 'large', 'xlarge' ]
        default: 'medium'
    docker:
      - image: circleci/node:14.15-stretch
    resource_class: <<parameters.class>>

jobs:
  install:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM cache
          keys:
            - npm-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          name: Save NPM cache
          key: npm-cache-v1-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  lint-test:
    executor:
      class: small
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run CommitLint
          command: npm run lint:commit
      - run:
          name: Run License Checker
          command: npm run lint:license
      - run:
          name: Run Prettier and ESLint
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm run test:coverage -- --ci --runInBand

  build:
    executor:
      class: large
      name: node-lts
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: NODE_OPTIONS=--max_old_space_size=3072 npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - storybook-static

  chromatic:
    executor:
      class: medium
      name: node-lts
    environment:
      CHROMATIC_PROJECT_TOKEN: 'secrethub://graviteeio/cicd/graviteebot/chromatic_project_token'
    steps:
      - checkout
      - attach_workspace:
          at: .
      - secrethub/exec:
          step-name: Running Chromatic
          command: npx chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --exit-once-uploaded -d=storybook-static

  release:
    executor:
      class: small
      name: node-lts
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Setup SSH Keys
          command: ssh-add -D && ssh-add ~/.ssh/id_rsa_ac88238fc60f7df0fcdf73203456026c
      - run:
          name: ðŸš€ Release the Kraken
          command: npm run release

workflows:
  version: 2.1
  validate:
    jobs:
      - install
      - lint-test:
          requires:
            - install
      - build:
          requires:
            - install
      - trigger-chromatic:
          type: approval
          requires:
            - build
            - lint-test
          # Ignore this manual step and trigger chromatic automatically on `master`
          filters:
            branches:
              ignore: master
      - chromatic:
          context: gravitee-qa
          requires:
            - build
            - trigger-chromatic
      - release:
          pre-steps:
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/infra/npm_token
                var-name: NPM_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/github_personal_access_token
                var-name: GITHUB_TOKEN
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_AUTHOR_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_AUTHOR_EMAIL
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/name
                var-name: GIT_COMMITTER_NAME
            - secrethub/env-export:
                secret-path: graviteeio/cicd/graviteebot/git/user/email
                var-name: GIT_COMMITTER_EMAIL
          context: gravitee-qa
          requires:
            - build
            - lint-test
          filters:
            branches:
              only: master
